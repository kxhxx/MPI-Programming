#include <mpi.h>
#include <stdio.h>
#include <stdlib.h>

#define N 100

int main(int argc, char** argv) {
    int rank, size;
    int local_sum = 0, total_sum = 0;
    int arr[N];

    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);

    int elements_per_proc = N / size;
    int local_arr[elements_per_proc];

    if (rank == 0) {
        for (int i = 0; i < N; i++) arr[i] = i + 1;
    }

    MPI_Scatter(arr, elements_per_proc, MPI_INT, local_arr, elements_per_proc, MPI_INT, 0, MPI_COMM_WORLD);

    for (int i = 0; i < elements_per_proc; i++) {
        local_sum += local_arr[i];
    }

    MPI_Reduce(&local_sum, &total_sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);

    if (rank == 0) {
        printf("Total Sum: %d\n", total_sum);
    }

    MPI_Finalize();
    return 0;
}
